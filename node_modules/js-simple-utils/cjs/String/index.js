'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * @module sString
 * @since 0.0.3
 * @description sString模块, 提供字符串处理
 * @example
 * // first import sString
 * import { sString } from 'js-simple-utils'
 * // then use sString
 * sString.padEnd('asd', 3); // 'asd   '
 * sString.padEnd('asd', 3, '_-'); // 'asd_-_'
 * sString.padStart('asd', 3); // '   asd'
 * sString.padStart('asd', 3, '_-'); // '_-_asd'
 */
/**
 * 以指定字符串为中心向两侧扩展到指定的长度
 * @static
 * @since 0.0.3
 * @param {string} [string=''] 要扩展的字符串
 * @param {number} [length=0] 扩展后字符串的总长度
 * @param {string} [chars=' '] 用于补齐的字符
 * @returns {string} 扩展后的字符串
 * @example
 * sString.pad('abc', 8); // '   abc   '
 * sString.pad('abc', 8, '_-'); // '_-abc_-_'
 */
const pad = (string = '', length = 0, chars = ' ') => {
    const strLength = length ? string.length : 0;
    if (!length || strLength >= length) {
        return string;
    }
    const mid = (length - strLength) / 2;
    return createPadding(Math.floor(mid), chars) + string + createPadding(Math.ceil(mid), chars);
};
/**
 * 在字符串的右侧补齐到指定的长度
 * @static
 * @since 0.0.3
 * @param {string} [string=''] 要补齐的字符串
 * @param {number} [length=0] 待补齐的字符串长度
 * @param {string} [chars=' '] 用于补齐的字符
 * @returns {string} 补齐后的字符串
 * @example
 * sString.padEnd('abc', 3); // 'abc   '
 * sString.padEnd('abc', 3, '_-'); // 'abc_-_'
 */
const padEnd = (string = '', length = 0, chars = ' ') => {
    const strLength = length ? string.length : 0;
    return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
};
/**
 * 在字符串的左侧补齐到指定的长度
 * @static
 * @since 0.0.3
 * @param {string} [string=''] 要补齐的字符串
 * @param {number} [length=0] 待补齐的字符串长度
 * @param {string} [chars=' '] 用于补齐的字符
 * @returns {string} 补齐后的字符串
 * @example
 * sString.padStart('abc', 3); // 'abc   '
 * sString.padStart('abc', 3, '_-'); // '_-_abc'
 */
const padStart = (string = '', length = 0, chars = ' ') => {
    const strLength = length ? string.length : 0;
    return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
};
/**
 * 创建一个指定长度的字符串，默认为空格，可以自定义字符
 * @private
 * @param {number} [length=0] 要创建的字符串长度
 * @param {string} [chars=' '] 要创建的字符串的字符
 * @returns {string} 返回创建的字符串
 */
const createPadding = (length = 0, chars = ' ') => {
    let str = '';
    for (let i = 0; i < length; i++) {
        str += chars;
    }
    return str;
};
var index = { pad, padEnd, padStart };

exports["default"] = index;
exports.pad = pad;
exports.padEnd = padEnd;
exports.padStart = padStart;
