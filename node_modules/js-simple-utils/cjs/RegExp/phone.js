'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/* eslint-disable no-useless-escape */
/**
 * @module sRegExp.phone
 * @since 0.0.2
 * @description sRegExp模块, 提供正则表达式
 */
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 中国大陆手机号
 * @constant {RegExp} PHONE
 * @example
 * sRegExp.PHONE.test('13800138000')
 */
const PHONE = /^1[3-9]\d{9}$/;
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 中国大陆手机号含有区号
 * @constant {RegExp} PHONE_86
 * @example
 * sRegExp.PHONE_86.test('+8613800138000')
 */
const PHONE_86 = /^((\+86)|(86))?[1][3-9]\d{9}$/;
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 其他国家手机号含有区号
 * @constant {RegExp} PHONE_OTHER
 * @example
 * sRegExp.PHONE_OTHER.test('+8613800138000')
 */
const PHONE_OTHER = /^((([\(\（]\+?\d{2,6}[\)\）])|(\+?\d{2,6}))-?)?(([\(\（]\d{6,12}[\)\）])|(\d{6,12}))$/;
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhone('13800138000')
 */
const isPhone = (phone) => PHONE.test(phone);
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhone86('+8613800138000')
 */
const isPhone86 = (phone) => PHONE_86.test(phone);
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhoneOther('+8613800138000')
 */
const isPhoneOther = (phone) => PHONE_OTHER.test(phone);
var phone = { PHONE, PHONE_86, PHONE_OTHER, isPhone, isPhone86, isPhoneOther };

exports.PHONE = PHONE;
exports.PHONE_86 = PHONE_86;
exports.PHONE_OTHER = PHONE_OTHER;
exports["default"] = phone;
exports.isPhone = isPhone;
exports.isPhone86 = isPhone86;
exports.isPhoneOther = isPhoneOther;
