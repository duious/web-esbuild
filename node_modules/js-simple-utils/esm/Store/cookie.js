/**
 * @module sCookie
 * @since 0.0.1
 */
/**
 * 设置cookie键值
 * @static
 * @since 0.0.1
 * @description 时间默认1天
 * @param  {string} key cookie名称
 * @param  {string} val cookie值
 * @param  {?number} [expires=1 * 24 * 60 * 60] cookie过期时间 单位秒 默认1天过期
 * @param  {?string} [path='/'] cookie路径
 * @param  {?string} [domain=''] cookie域名
 * @param  {?boolean} [secure=''] cookie安全标识
 * @param  {?('' | 'strict' | 'lax')} [sameSite=''] cookie同源标识
 * @return {boolean} true成功/false失败
 * @example
 * sCookie.setItem('name', 's')
 * sCookie.setItem('name', 's', 1 * 24 * 60 * 60)
 * sCookie.setItem('name', 's', 1 * 24 * 60 * 60, '/')
 */
const setItem = (key, val, expires, path, domain, secure, sameSite) => {
    const date = new Date(); // 获取当前时间
    // 过期时间
    date.setTime(date.getTime() + (expires || 1 * 24 * 60 * 60) * 1000);
    if (Object.prototype.toString.call(val) === '[object Object]') {
        val = JSON.stringify(val);
    }
    // 设置cookie
    // eslint-disable-next-line prettier/prettier
    document.cookie = `${key}=${encodeURI(val)};expires=${Date.prototype.toUTCString.call(date)};path=${path || '/'};domain=${domain || ''};secure=${secure || false};sameSite=${sameSite || ''}`;
    return getItem(key) === val;
};
/**
 * 获取cookie键值
 * @static
 * @since 0.0.1
 * @param  {string} key cookie键名
 * @return {undefined | string} cookie值
 * @example
 * sCookie.getItem('name')
 */
const getItem = (key) => {
    var _a;
    return (_a = document.cookie.match(new RegExp(`(^| )${key}=([^;]*)(;|$)`))) === null || _a === void 0 ? void 0 : _a[2];
};
/**
 * 删除cookie键值
 * @static
 * @since 0.0.1
 * @param  {string} key cookie键名
 * @return {boolean} true成功/false失败
 * @example
 * sCookie.delItem('name')
 */
const delItem = (key) => {
    document.cookie = `${key}=;expires = ${Date.prototype.toUTCString.call(new Date(0))}`;
    return !getItem(key);
};
var cookie = { setItem, getItem, delItem };

export { cookie as default, delItem, getItem, setItem };
