/**
 * @module sRegExp.phone
 * @since 0.0.2
 * @description sRegExp模块, 提供正则表达式
 */
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 中国大陆手机号
 * @constant {RegExp} PHONE
 * @example
 * sRegExp.PHONE.test('13800138000')
 */
declare const PHONE: RegExp;
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 中国大陆手机号含有区号
 * @constant {RegExp} PHONE_86
 * @example
 * sRegExp.PHONE_86.test('+8613800138000')
 */
declare const PHONE_86: RegExp;
/**
 * 手机号
 * @static
 * @since 0.0.2
 * @description 其他国家手机号含有区号
 * @constant {RegExp} PHONE_OTHER
 * @example
 * sRegExp.PHONE_OTHER.test('+8613800138000')
 */
declare const PHONE_OTHER: RegExp;
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhone('13800138000')
 */
declare const isPhone: (phone: string) => boolean;
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhone86('+8613800138000')
 */
declare const isPhone86: (phone: string) => boolean;
/**
 * 判断是否是手机号
 * @static
 * @since 0.0.2
 * @param {string} phone 手机号
 * @returns {boolean} true是/false否
 * @example
 * sRegExp.isPhoneOther('+8613800138000')
 */
declare const isPhoneOther: (phone: string) => boolean;
export { PHONE, PHONE_86, PHONE_OTHER, isPhone, isPhone86, isPhoneOther };
declare const _default: {
    PHONE: RegExp;
    PHONE_86: RegExp;
    PHONE_OTHER: RegExp;
    isPhone: (phone: string) => boolean;
    isPhone86: (phone: string) => boolean;
    isPhoneOther: (phone: string) => boolean;
};
export default _default;
